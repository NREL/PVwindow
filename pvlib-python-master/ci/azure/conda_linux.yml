parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python36-min:
        python.version: '36'
        suffix: '-min'
      Python36:
        python.version: '36'
        coverage: true
      Python37:
        python.version: '37'
      Python38:
        python.version: '38'
      Python39:
        python.version: '39'

  steps:
  - bash: echo "##vso[task.prependpath]/usr/share/miniconda/bin"
    displayName: Add conda to PATH
  - script: conda env create --quiet --file ci/requirements-py$(python.version)$(suffix).yml
    displayName: Create Anaconda environment
  - script: |
      source activate test_env
      pip install pytest-azurepipelines
      pip install -e .
    displayName: 'pip dependencies'
  - script: |
      source activate test_env
      conda list
    displayName: 'List installed dependencies'
  - script: |
      source activate test_env
      export NREL_API_KEY=$(nrelApiKey)
      pytest pvlib --remote-data --junitxml=junit/test-results.xml --cov --cov-report=xml --cov-report=html
    displayName: 'pytest'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Linux $(python.version)'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
    condition: eq(variables['coverage'], true)
  - script: |
      bash <(curl https://codecov.io/bash) -t bbc2bdbe-5e67-4fef-9cb7-f52fe0b703a8 -f coverage.xml -F adder -F subtractor -F conda
    displayName: 'codecov'
    condition: eq(variables['coverage'], true)
