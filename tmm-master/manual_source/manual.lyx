#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{fullpage}
\usepackage{graphicx}
\usepackage{url}
\usepackage{parskip}
\usepackage[margin=15pt,font=small,labelfont=bf,labelsep=endash]{caption}



%TYPESETTING
\newcommand{\smat}{\left( \begin{matrix}} %start matrix
\newcommand{\emat}{\end{matrix} \right)} %end matrix

\newcommand{\bea}{\begin{eqnarray*}} %begin unnumbered equation array
\newcommand{\eea}{\end{eqnarray*}} %end unnumbered equation array

\newcommand{\beq}{\begin{equation}} %begin numbered equation that I won't be referring back to
\newcommand{\be}[1]{\begin{equation}\label{#1}} %begin numbered equation with a label so I can refer back to it
\newcommand{\ee}{\end{equation}} %end numbered equation

\newcommand{\bskip}{\bigskip\noindent} %new non-indented paragraph, spaced from previous

%FORMULA MACROS
\renewcommand{\(}{\left(}
\renewcommand{\)}{\right)}
\renewcommand{\Im}{\operatorname{Im}}
\renewcommand{\Re}{\operatorname{Re}}

\newcommand{\E}{\mathbf{E}}
\renewcommand{\H}{\mathbf{H}}
\renewcommand{\k}{\mathbf{k}}
\newcommand{\hatk}{\hat{\mathbf{k}}}
\renewcommand{\S}{\mathbf{S}}
\renewcommand{\r}{\mathbf{r}}
\newcommand{\x}{\hat{\mathbf{x}}}
\newcommand{\y}{\hat{\mathbf{y}}}
\newcommand{\z}{\hat{\mathbf{z}}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\pdf_quoted_options "hidelinks"
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Written by Steve Byrnes, originally in 2012.
 Please email me any feedback.
 My website is 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://sjbyrnes.com
\end_layout

\end_inset

, and the code lives at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/sbyrnes321/tmm
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
This is a group of programs written in Python / NumPy for simulating light
 propagation in planar multilayer thin films, including the effects of multiple
 internal reflections and interference, using the 
\begin_inset Quotes eld
\end_inset

Transfer Matrix Method
\begin_inset Quotes erd
\end_inset

.
 It can also simulate combinations of thin and thick films (e.g.
 a thick piece of glass with a multi-layer antireflection coating on one
 side and a mirror on the other side), or purely thick films.
\end_layout

\begin_layout Standard
In addition to calculating how much light is transmitted and reflected,
 the program can calculate, at any given point in the structure, how much
 light is being absorbed there.
 This is a very important feature for solar-cell modeling, for example.
\end_layout

\begin_layout Standard
It can also calculate the parameters measured in ellipsometry.
\end_layout

\begin_layout Standard

\series bold
I wrote out derivations and discussions of the formulas and calculations
 implemented by this program at: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://arxiv.org/abs/1603.02720
\end_layout

\end_inset

.
 You are encouraged to cite that paper if you publish results that come
 from this software.
 :-) 
\end_layout

\begin_layout Section
Files and API
\end_layout

\begin_layout Standard
There are four files: (1) 
\family typewriter
tmm_core.py
\family default
 contains all the main programs, (2) 
\family typewriter
color.py
\family default
 has additional color-related functions, like calculating the RGB color
 of a thin film under reflected light, (3) 
\family typewriter
examples.py
\family default
 contains a few example calculations to get you started, and (4) 
\family typewriter
tests.py
\family default
 contains a number of programs that perform various tests and consistency
 checks to confirm that everything is coded and running correctly.
 There is also the standard 
\family typewriter
__init__.py
\family default
, the home of the main 
\family typewriter
tmm
\family default
 namespace, into which are imported all the 
\family typewriter
tmm_core
\family default
 functions.
 [To run the color-theory related functions in 
\family typewriter
color.py
\family default
, you need to download the package 
\family typewriter
colorpy
\family default
 at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://pypi.python.org/pypi/colorpy/
\end_layout

\end_inset

 .
 But even without that, you can still run all the other code.]
\end_layout

\begin_layout Standard
The API information (list of functions and how to call them) is available
 at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://pythonhosted.org/tmm/
\end_layout

\end_inset

.
 I also suggest to look at the functions in the 
\family typewriter
examples
\family default
 submodule to see examples of various kinds of calculations and plots.
 (If you're not sure how to find this code, it is online at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://pythonhosted.org/tmm/_modules/tmm/examples.html
\end_layout

\end_inset

)
\end_layout

\begin_layout Section
Other people's programs
\end_layout

\begin_layout Standard
There are many other free (and non-free) programs that do some or all of
 what this program does.
 I have a list at: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://sjbyrnes.com/multilayer-film-optics-programs/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I have done a few consistency checks between my program and others.
 They tend to agree perfectly except in the tricky (and somewhat unusual)
 case of calculating reflected power or transmitted power when the semi-infinite
 incoming and/or outgoing medium has a complex index of refraction.
 Again, see 
\series bold

\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://arxiv.org/abs/1603.02720
\end_layout

\end_inset


\series default
 for further discussion.
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Standard
Requires SciPy and NumPy to run.
 The 
\begin_inset Quotes eld
\end_inset

examples
\begin_inset Quotes erd
\end_inset

 also use Matplotlib, while the color calculation part requires ColorPy
 (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://pypi.python.org/pypi/colorpy
\end_layout

\end_inset

).
 Tested in Python 2.7 and 3.3+.
 (For color calculations in Python 3, you need the Python-3-compatible version
 of ColorPy at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/fish2000/ColorPy/
\end_layout

\end_inset

 .
 Install it via 
\family typewriter
pip
\family default
 or 
\family typewriter
easy_install
\family default
, or just download it directly (it's pure python, but you need to treat
 it as a package, not separate files).
\begin_inset Foot
status open

\begin_layout Plain Layout
People don't normally set up packages 
\begin_inset Quotes eld
\end_inset

by hand
\begin_inset Quotes erd
\end_inset

, but it's not too difficult in a case like this where the package is pure
 python, rather than C code etc.
 See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.python.org/3/tutorial/modules.html
\backslash
#packages
\end_layout

\end_inset

 .
 You download the package file from 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://pypi.python.org/pypi/tmm
\end_layout

\end_inset

 (it's called something like 
\family typewriter
tmm-0.1.2.tar.gz
\family default
), and unzip it.
 (On Windows you need an unzipping program, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.7-zip.org/
\end_layout

\end_inset

).
 Your goal is to have a (normal, not zipped) folder named 
\family typewriter
tmm
\family default
 (lower-case), in which are all the 
\family typewriter
.py
\family default
 files (
\family typewriter
__init__.py
\family default
 and 
\family typewriter
tmm_core.py
\family default
 and so on, but not 
\family typewriter
setup.py
\family default
).
 You may need to move files or rename the folder to get things in this format.
 Now that you have this folder, put it somewhere that Python can find it.
 (If you're not sure, type 
\family typewriter
import
\begin_inset space ~
\end_inset

sys;
\begin_inset space ~
\end_inset

sys.path
\family default
 into your Python interactive console.
 Any folder on this list is an OK place to put your 
\family typewriter
tmm
\family default
 folder.
 Note that the 
\family typewriter
tmm
\family default
 folder itself (i.e., the files inside it) should 
\emph on
not
\emph default
 be on the Python path.) Exit and restart your Python interactive console,
 and you should have 
\family typewriter
tmm
\family default
 working.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Installation for dummies
\end_layout

\begin_layout Standard
If you've never used Python before, check out 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://sjbyrnes.com/python.html
\end_layout

\end_inset

 for advice on installation and getting started.
\end_layout

\begin_layout Standard
Let's say you have Windows or Mac, and you just installed the Anaconda Python
 distribution 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.anaconda.com/products/individual
\end_layout

\end_inset

 .
 The next step is to open the 
\begin_inset Quotes eld
\end_inset

Anaconda command prompt
\begin_inset Quotes erd
\end_inset

, connect to the internet, and then run the command 
\family typewriter
pip
\begin_inset space ~
\end_inset

install
\begin_inset space ~
\end_inset

tmm
\family default
 .
 All done! 
\end_layout

\begin_layout Standard
Note that when you install with 
\family typewriter
pip
\family default
, the package source code winds up in a folder somewhere on your computer.
 If you want to look at it or edit it, you need to find it first! The easy
 way to find it is to type 
\family typewriter
import
\begin_inset space ~
\end_inset

tmm;
\begin_inset space ~
\end_inset

tmm.__file__
\family default
 into your Python console.
\end_layout

\begin_layout Standard
To get going, try running the following Python code: [In Jupyter notebooks
 or Spyder, you don't need the first two lines.]
\end_layout

\begin_layout Verbatim
>> import matplotlib.pyplot
\end_layout

\begin_layout Verbatim
>> matplotlib.pyplot.ion()
\end_layout

\begin_layout Verbatim
>> import tmm.examples
\end_layout

\begin_layout Verbatim
>> tmm.examples.sample1()
\end_layout

\begin_layout Standard
A plot should pop up.
\end_layout

\begin_layout Section
Units
\end_layout

\begin_layout Standard
The program implicitly requires a unit of length.
 You can use any unit, but keep it consistent.
 For example, if wavelength is given in nanometers, the thicknesses of the
 layers should also be given in nanometers, and the absorption at a given
 point will be in (fraction of incoming light power per nanometer of depth).
\end_layout

\end_body
\end_document
